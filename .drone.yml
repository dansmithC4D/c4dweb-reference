services:
  mysql:
    image: fpfis/mysql56

pipeline:
  fix-drupal:
    image: fpfis/php71-dev
    commands:
      - patch -i ../assets/drupal_get_path_alias-fix.patch -d web -p1

  get-sanitzed-dump:
    image: fpfis/drone-plugin-asda
    target: dump.sql
    website: ${DRONE_REPO_NAME%%-reference}
    secrets: [ asda_url ]

  import-dump:
    image: fpfis/mysql56
    commands:
      - mysqladmin -h mysql create database
      - mysql database -h mysql < dump.sql
    when:
      event: push

  setup-test-drupal:
    image: fpfis/php71-dev
    commands:
      - cp assets/settings.docker.php web/sites/default/settings.local.php
    when:
      event: push

  test-upgrade-test:
    image: fpfis/php71-dev:latest
    commands:
      - drush -r web cc all
      - drush -r web rr --no-cache-clear
      - drush -r web cc all
      - drush -r web fra -y
      - drush -r web updb -y
      - drush -r web status
      - drush -r web cc all
    when:
      event: push

  slack-notify-deploy:
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: ci
    username: fpfisbot
    icon_url: https://avatars0.githubusercontent.com/u/23079543?v=3&s=400
    when:
      event: push
      status: [ success, failure ]
    template: >
      {{#success build.status}}
        {{repo.name}}@{{build.branch}} <{{build.link}}|passed> the upgrade test.
      {{else}}
        {{repo.name}}@{{build.branch}} <{{build.link}}|failed> the upgrade test.
      {{/success}}

  create-deploy-test:
    image: fpfis/drone-plugin-github-deploy
    state: create
    deploy_environment: acceptance
    secrets: [ github_api_token ]
    automerge: false
    when:
      event: push
      branch: [feature/php7_acceptance]

  # End testing

  # Begin deployment
 
  mark-commit:
    image: fpfis/php71-dev
    commands:
      - echo ${DRONE_COMMIT_SHA} > web/.commit
      
# Push to deploy server and sync platform/sites/default folder from live environment
  deploy-test:
    image: fpfis/drone-plugin-git-deploy
    source: web
    target_folder: website
    secrets:
      - source: target_repo_acceptance
        target: target_repo
      - source: deploy_key_acceptance
        target: deploy_key
    clean: false
    message: Deployed ${DRONE_COMMIT_SHA} from ${DRONE_REPO_ORG}/${DRONE_REPO_NAME}@${DRONE_BRANCH}
    excludes:
      - settings.php
      - settings.local.php
      - files
      - sites/all/modules/fpfis
    when:
      event: deployment
      environment: [ acceptance ]
   #   branch: [test, test/*, feature/*]

  backup-deployed-environment:
    image: fpfis/php71-dev
    commands:
      - drush -r website sql-dump > /backups/${DRONE_REPO_NAME}-${DRONE_DEPLOY_TO}-before-${DRONE_COMMIT_SHA}.sql
      - gzip /backups/${DRONE_REPO_NAME}-${DRONE_DEPLOY_TO}-before-${DRONE_COMMIT_SHA}.sql
    when:
      event: deployment
      environment: [ acceptance ]
    volumes:
      - /backups:/backups
      
  align-website-environment:
    image: fpfis/php71-dev
    commands:
      - drush -r website sql-drop --yes
      - drush -r website sqlc < dump.sql
      - drush -r website vset maintenance_mode 1
    when:
      event: deployment
      environment: acceptance
  site-upgrade:
    image: fpfis/php71-dev:latest
    commands:
      - wget https://github.com/ec-europa/platform-deploy/archive/fpfis-conf/2.4.tar.gz -O -|tar --strip 1 -xzvC website
      - rm -f website/sites/sites.php
      - drush -r website cc all
      - drush -r website rr --no-cache-clear
      - drush -r website cc all
      - drush -r website fra -y --force
      - drush -r website updb -y
      - drush -r website en reroute_email -y
      - drush -r website status
      - drush -r website cc all
      - drush -r website vset maintenance_mode 0
    when:
      event: deployment
      environment: [ acceptance ]
    #  branch: [test, test/*, feature/*]


  slack-notify-deploy:
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: ci
    username: fpfisbot
    icon_url: https://avatars0.githubusercontent.com/u/23079543?v=3&s=400
    when:
      event: deployment
      environment: [ acceptance, production,test ]
      status: [ success, failure ]
    template: >
      {{#success build.status}}
        {{repo.name}}@{{build.branch}} <{{build.link}}|deployed> in ${DRONE_DEPLOY_TO}.
      {{else}}
        {{repo.name}}@{{build.branch}} <{{build.link}}|failed> to deploy in ${DRONE_DEPLOY_TO}.
      {{/success}}
